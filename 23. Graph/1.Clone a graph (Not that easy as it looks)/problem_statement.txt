Problem Statement:
You are given a reference/address of a node in a connected undirected graph containing N nodes and M edges. You are supposed to return a clone of the given graph which is nothing but a deep copy. Each node in the graph contains an integer “data” and an array/list of its neighbours.
The structure of the graphNode class is as follows:
class graphNode 
{  
    public:
        int data;
        vector<graphNode*> neighbours;
}

Note :
1. Nodes are numbered from 1 to N.

2. Your solution will run on multiple test cases. If you are using global variables make sure to clear them.

Input Format :
The first line of input contains an integer 'T' representing the number of the test case. Then the test cases are as follows.

The first line of each test case contains a single integer ‘N’ representing the number of nodes in the graph.

The second line of each test case contains a single integer ‘M’ representing the number of edges. 

The next ‘M’ lines in each test case contain two integers ‘U’ and ‘V’ separated by a single space denoting an undirected edge between nodes U and V. 

Output Format :
For each test case, print a single line containing "true" if the graph is cloned correctly otherwise it will print "false".

The output of each test case will be printed in a separate line.

Note :
You do not need to print anything; It has already been taken care of. Just implement the given function.

Constraints :
1 <= T <= 5
2 <= N <= 100000
1 <= M <= min(N(N-1)/2,100000)
1 <= E[i][0], E[i][1] <= N

Where  ‘N’ is the number of nodes in the given graph, ‘M’ denotes the number of edges and ‘E’ denotes the edge matrix.

Time Limit: 1 sec.

Sample Input 1 :
2
5
6
1 2
4 1
2 4
3 4
5 2
1 3
3
2
1 2
1 3

Sample Output 1 :
true
true

Explanation of Input 1 :
In the first test case, the returned graph contains 5 nodes and 6 edges which are:
1 2
4 1
2 4
3 4
5 2
1 3
Since it is similar to the given graph with different address nodes then the solution is correct.

In the second test case, the returned graph contains 3 nodes and 2 edges which are:
1 2
1 3
Since it is similar to the given graph with different address nodes then the solution is correct.

Sample Input 2 :
2
5
4
1 2
2 3
3 4
4 5
2
1
1 2

Sample Output 2 :
true
true

Explanation of Input 2 :
In the first test case, the returned graph contains 5 nodes and 4 edges which are:
1 2
2 3
3 4
4 5
Since it is similar to the given graph with different address nodes then the solution is correct.

In the second test case, the returned graph contains 2 nodes and 1 edge which is:
1 2

Since it is similar to the given graph with different address nodes then the solution is correct.

